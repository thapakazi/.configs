# ~/.tmux.conf
#
# http://blog.hawkhost.com/2010/06/28/tmux-the-terminal-multiplexer/
# http://www.dayid.org/os/notes/tm.html
#
# Other sample tmux.conf files
# http://www.mindfuzz.net/?p=178

#=====================================================================
#Beautify tmux
#set -g status-right '#[fg=yellow]#(uptime | egrep -o "[0-9]+ users?, +load.*"|perl -pe "s| averages?||"), %H:%M'

# # Set status bar
# set -g status-bg black
# set -g status-fg white

# # left
# set -g status-left-fg green
# set -g status-left-bg black
# set -g status-left '#H:#S'
# set -g status-left-length 20
# #set -g status-left '#[fg=green]#S'

# # Highlight active window
# set-window-option -g window-status-current-bg red
# set-window-option -g window-status-current-fg white

# # right
# set -g status-right-fg yellow
# set -g status-right-bg colour235
# set -g status-right '%a %b %d, %Y %H:%M'
# #set -g status-right '#[fg=yellow] %b %d, %Y %H:%M'

# # Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Automatically set window title
setw -g automatic-rename

#=====================================================================
# Global settings
# mouse support
set -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

##Toggle mouse on with <prefix>m
bind m \
        set -g mode-mouse on \;\
        set -g mouse-resize-pane on \;\
        set -g mouse-select-pane on \;\
        set -g mouse-select-window on \;\
        display 'Mouse: ON'

## Toggle mouse off with <prefix>M
bind M \
        set -g mode-mouse off \;\
        set -g mouse-resize-pane off \;\
        set -g mouse-select-pane off \;\
        set -g mouse-select-window off \;\
        display 'Mouse: OFF'
### End Mouse On/Off



# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# ##CLIPBOARD selection integration
# ##Requires prefix key before the command key
# #Copy tmux paste buffer to CLIPBOARD
# bind C-c run "tmux save-buffer - | xclip -i -selection clipboard"
# #Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
# bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

##CLIPBOARD selection integration
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
bind C-c run "tmux show-buffer | xsel -i -b"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"

# # move x clipboard into tmux paste buffer
# bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# # move tmux copy buffer into x clipboard
# bind C-y run "tmux save-buffer - | xclip -i"

# setw -g automatic-rename
set -g default-terminal "xterm-256color"
set -g utf8 on
setw -g utf8 on
setw -g aggressive-resize on
set-window-option -g aggressive-resize on

set-option -g default-shell /bin/zsh

#tmux new window point current path
# bind c new-window -c "#{pane_current_path}"
bind c neww -c '#{pane_current_path}'
bind "\"" split-window -c '#{pane_current_path}'
bind "\%" split-window -h -c '#{pane_current_path}'

#=====================================================================
# EMACS STYLE
#---------------------------------------------------------------------
# prefix set
#unbind C-b
#set -g prefix C-a
bind-key C-b send-prefix

# unbind-key C-b
# set -g prefix "C-,"
# bind-key 'C-,' send-prefix
#tmux set-option default-path "$PWD"

# new window
# unbind-key f # remove find window
# unbind-key c
# bind-key C-f new-window
# bind-key f new-window

# Split windows like emacs
# bind-key 1 break-pane
# bind-key 2 split-window -v
# bind-key 3 split-window -h
# bind-key + select-layout even-horizontal

#bind-key o select-pane -U

# resize panes
# bind-key -n C-S-Up resize-pane -U 2
# bind-key -n C-S-Down resize-pane -D 2
# bind-key -n C-S-Left resize-pane -L 1
# bind-key -n C-S-Right resize-pane -R 1


#=====================================================================
# Made Easy
#---------------------------------------------------------------------
bind-key C-S-a last-window

# Ctrl-Left/Right cycles thru windows (no prefix)
bind-key  h select-pane -t :-
bind-key  g select-pane -t :+

# Ctrl-Up/Down cyles thru panes (no prefix)
bind-key u  select-pane -t :.-
bind-key t select-pane -t :.+

# send the prefix to client inside window
# bind-key C-a send-prefix

# toggle last window like screen
#bind-key C-a last-window

# open a man page in new window
#bind-key / command-prompt "split-window 'exec man %%'"

# quick view of processes
bind-key "~" split-window "exec htop"

# scrollback buffer n lines
set -g history-limit 50000

# listen for activity on all windows
# set -g bell-action any
# set -g bell-action non

# start window indexing at zero (default)
#set -g base-index 0

# xterm-style function key sequences
#setw -g xterm-keys on

# enable wm window titles
#set -g set-titles on

# wm window title string (uses statusbar variables)
#set -g set-titles-string "tmux.#I.#W"

# don't close windows. just deactivate them. use respawn-window to
#reactivate.
#setw -g remain-on-exit on

#---------------------------------------------------------------------
# Key bindings

# detach client
#bind-key d detach
#bind-key C-d detach

# choose a client to detach
#bind-key D choose-client

# choose window/session
#bind-key "'" choose-window
#bind-key '"' choose-session

# display visible indicator of each pane
#bind-key w display-panes

# swap panes
#bind-key -r J swap-pane -D
#bind-key -r K swap-pane -U

# Cycle to next pane
#bind-key -r Tab select-pane -t :.+

# kill current pane/window
#bind-key q confirm-before kill-pane
#bind-key Q confirm-before kill-window
#bind-key C-q confirm-before kill-pane
#bind-key x kill-pane
#bind-key X kill-window

# specific window layouts
#bind -r y next-layout
#bind o select-layout "active-only"
#bind O select-layout "main-vertical"

# copying and pasting
#bind-key [ copy-mode
#bind-key ] paste-buffer -s \015

# vi-style controls for copy mode
#setw -g mode-keys vi

# enable mouse selection in copy mode
#setw -g mode-mouse on

# list all paste buffers (default key is '#')
#bind-key b list-buffers

# choose buffer to paste interactively (default key was '=')
#bind-key p choose-buffer

# delete the most recently copied buffer of text (default key was '-')
#bind-key x delete-buffer

# next
#bind-key -r Space next-window
#bind-key -r "C-Space" next-window

# prev
#bind-key BSpace previous-window

# title (default key in tmux is ',')
#bind-key A command-prompt "rename-window %%"

# quit
#bind-key \ confirm-before kill-server

# displays
#bind-key * list-clients

# redisplay (default key in tmux is 'r')
#bind-key C-l refresh-client
#bind-key l refresh-client
#bind-key r refresh-client

#---------------------------------------------------------------------
# Statusbar settings

# toggle statusbar
#bind-key s set status

#---------------------------------------------------------------------
# Session initialization

# Note:
#   new  - alias for new-session
#   neww - alias for new-window

# first session
#new -d -s0
#neww -d
#neww -d
#neww -d

# second session
#new -d -s1
#neww -d
#neww -d

#select-window -t1
#------------------------------------from book--------------
# new config
# set the status line's colors
set -g status-fg white
set -g status-bg black

# set the color of the window list
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# set colors for the active window
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# pane colors
#set -g pane-border-fg green
#set -g pane-border-bg black
#set -g pane-active-border-fg white
#set -g pane-active-border-bg green

# Command / message line
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Status line left side
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-utf8 on
# Status line right side
# 15% | 28 Nov 18:15
set -g status-right "#[fg=yellow]#(batti -t -g5|sed 's/:00//g') | #[fg=cyan]%d %b %R"
# Update the status bar every sixty seconds
set -g status-interval 60
# Center the window list
set -g status-justify centre